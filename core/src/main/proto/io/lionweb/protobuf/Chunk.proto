syntax = "proto3";

package io.lionweb.protobuf;

option java_multiple_files = true;
option java_package = "io.lionweb.protobuf";
option java_outer_classname = "ChunkProtos";

message PBChunk {
  string serialization_format_version = 1;

  // Interned strings
  repeated string interned_strings = 2;
  repeated PBMetaPointer interned_meta_pointers= 3;

  // Interned languages
  repeated PBLanguage interned_languages = 4;
  repeated PBNode nodes = 5;
}

message PBLanguage {
  optional uint32 key = 1;
  optional uint32 version = 2;
}

message PBNode {
  // Yes, we should _not_ have null IDs, but if necessary we can represent them
  optional uint32 id = 1;
  uint32 classifier = 2;
  repeated PBProperty properties = 3;
  repeated PBContainment containments = 4;
  repeated PBReference references = 5;
  /* This is a list of indexes representing the string values corresponding to the IDs of the annotations */
  /* int to accomodate potential null values */
  repeated int32 annotations = 6 [packed = true];
  optional uint32 parent = 7;
}

message PBMetaPointer {
  // Instead of duplicating language+version as raw numbers everywhere,
  // point to the languages table.
  uint32 language = 1; // index into PBChunk.languages
  optional uint32 key            = 2; // concept/key within that language
}

message PBProperty {
  uint32 meta_pointer = 1;
  optional uint32 value = 2;
}

message PBContainment {
  uint32 meta_pointer = 1;
  repeated int32 children = 2; // int32 to accomodate potential null values
}

message PBReference {
  uint32 meta_pointer = 1;
  repeated PBReferenceValue values = 2;
}

message PBReferenceValue {
  optional uint32 resolveInfo = 1;
  optional uint32 referred = 2;
}
